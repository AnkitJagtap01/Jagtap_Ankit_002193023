/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.CardLayout;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.TableView;
import model.Car;
import model.Carlist;

/**
 *
 * @author ankitjagtap
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    
    Carlist list;
    
    public ViewJPanel(Carlist list) {
        initComponents();
        
        this.list = list;
        
        populateTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSeats = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblView = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        lblBrandV = new javax.swing.JLabel();
        txtBrandV = new javax.swing.JTextField();
        lblYearV = new javax.swing.JLabel();
        lblSeatsV = new javax.swing.JLabel();
        lblModelV = new javax.swing.JLabel();
        lblCityV = new javax.swing.JLabel();
        lblUsedV = new javax.swing.JLabel();
        lblMaintenanceV = new javax.swing.JLabel();
        lblCarAvailabilityV = new javax.swing.JLabel();
        txtYearV = new javax.swing.JTextField();
        txtSeatsV = new javax.swing.JTextField();
        txtModelV = new javax.swing.JTextField();
        txtCityV = new javax.swing.JTextField();
        btnSearchByBrand = new javax.swing.JButton();
        btnSearchByYear = new javax.swing.JButton();
        btnSearchBySeats = new javax.swing.JButton();
        btnSearchByModel = new javax.swing.JButton();
        btnSearchByCity = new javax.swing.JButton();
        btnAvailable = new javax.swing.JButton();
        btnMaintenance = new javax.swing.JButton();
        btnIsUsed = new javax.swing.JButton();
        lblSerialNum = new javax.swing.JLabel();
        txtSerialNum = new javax.swing.JTextField();
        btnSearchBySerial = new javax.swing.JButton();
        btnFirstAvailable = new javax.swing.JButton();
        lblMinseats = new javax.swing.JLabel();
        txtMinseats = new javax.swing.JTextField();
        lblMaxseats = new javax.swing.JLabel();
        txtMaxseats = new javax.swing.JTextField();
        btnSearchMinMax = new javax.swing.JButton();
        lblTime = new javax.swing.JLabel();
        btnImport = new javax.swing.JButton();
        cbIUsedV = new javax.swing.JCheckBox();
        cbMaintenanceV = new javax.swing.JCheckBox();
        cbAvailableV = new javax.swing.JCheckBox();

        lblSeats.setText("Seats:");

        setBackground(new java.awt.Color(0, 255, 255));

        lblTitle.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 0, 0));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("View Cars");

        tblView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Brand", "Year", "Seats", "Model Number", "Serial Number", "City", "Used by Uber", "Maintenance Certificate", "Available"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblView);
        if (tblView.getColumnModel().getColumnCount() > 0) {
            tblView.getColumnModel().getColumn(0).setResizable(false);
            tblView.getColumnModel().getColumn(1).setResizable(false);
            tblView.getColumnModel().getColumn(2).setResizable(false);
            tblView.getColumnModel().getColumn(3).setResizable(false);
            tblView.getColumnModel().getColumn(4).setResizable(false);
            tblView.getColumnModel().getColumn(5).setResizable(false);
            tblView.getColumnModel().getColumn(6).setResizable(false);
            tblView.getColumnModel().getColumn(7).setResizable(false);
            tblView.getColumnModel().getColumn(8).setResizable(false);
        }

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblBrandV.setForeground(new java.awt.Color(255, 0, 0));
        lblBrandV.setText("Brand:");

        lblYearV.setForeground(new java.awt.Color(255, 0, 0));
        lblYearV.setText("Year of Manufacture:");

        lblSeatsV.setForeground(new java.awt.Color(255, 0, 0));
        lblSeatsV.setText("Seats:");

        lblModelV.setForeground(new java.awt.Color(255, 0, 0));
        lblModelV.setText("Model No.:");

        lblCityV.setForeground(new java.awt.Color(255, 0, 0));
        lblCityV.setText("City:");

        lblUsedV.setForeground(new java.awt.Color(255, 0, 0));
        lblUsedV.setText("Used by Uber:");

        lblMaintenanceV.setForeground(new java.awt.Color(255, 0, 0));
        lblMaintenanceV.setText("Maintenance Certificate:");

        lblCarAvailabilityV.setForeground(new java.awt.Color(255, 0, 0));
        lblCarAvailabilityV.setText("Available (Yes/No):");

        btnSearchByBrand.setText("Search by Brand");
        btnSearchByBrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchByBrandActionPerformed(evt);
            }
        });

        btnSearchByYear.setText("Search by Year");
        btnSearchByYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchByYearActionPerformed(evt);
            }
        });

        btnSearchBySeats.setText("Search by Seats");
        btnSearchBySeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchBySeatsActionPerformed(evt);
            }
        });

        btnSearchByModel.setText("Search by Model");
        btnSearchByModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchByModelActionPerformed(evt);
            }
        });

        btnSearchByCity.setText("Search by City");
        btnSearchByCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchByCityActionPerformed(evt);
            }
        });

        btnAvailable.setText("Filter by Availability");
        btnAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvailableActionPerformed(evt);
            }
        });

        btnMaintenance.setText("Filter by Certificate");
        btnMaintenance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMaintenanceActionPerformed(evt);
            }
        });

        btnIsUsed.setText("Filter by usability");
        btnIsUsed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIsUsedActionPerformed(evt);
            }
        });

        lblSerialNum.setForeground(new java.awt.Color(255, 0, 0));
        lblSerialNum.setText("Serial Number");

        btnSearchBySerial.setText("Search by Serial Number");
        btnSearchBySerial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchBySerialActionPerformed(evt);
            }
        });

        btnFirstAvailable.setText("First Available car");
        btnFirstAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstAvailableActionPerformed(evt);
            }
        });

        lblMinseats.setText("Minimum seats");

        lblMaxseats.setText("Maximum seats");

        btnSearchMinMax.setText("Find cars");
        btnSearchMinMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchMinMaxActionPerformed(evt);
            }
        });

        btnImport.setText("Import");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(68, 68, 68))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBrandV)
                            .addComponent(lblYearV)
                            .addComponent(lblSeatsV)
                            .addComponent(lblModelV)
                            .addComponent(lblCityV)
                            .addComponent(lblUsedV)
                            .addComponent(lblMaintenanceV)
                            .addComponent(lblCarAvailabilityV)
                            .addComponent(lblSerialNum))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtCityV, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnSearchByCity))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtYearV, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnSearchByYear))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtBrandV, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtSerialNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnSearchBySerial)
                                            .addComponent(btnSearchByBrand)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(txtModelV, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnSearchByModel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblMaxseats))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(txtSeatsV, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnSearchBySeats)
                                                .addGap(47, 47, 47)
                                                .addComponent(lblMinseats)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtMinseats, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtMaxseats, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnSearchMinMax))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(cbIUsedV))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(cbMaintenanceV))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(cbAvailableV)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnIsUsed)
                                    .addComponent(btnMaintenance)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnAvailable)
                                        .addGap(52, 52, 52)
                                        .addComponent(btnFirstAvailable))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(btnImport)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnView)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete, btnView});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnSearchByBrand, btnSearchByCity, btnSearchByModel, btnSearchBySeats, btnSearchByYear});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtBrandV, txtSerialNum});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDelete)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnView)
                        .addComponent(btnUpdate)
                        .addComponent(lblTime)
                        .addComponent(btnImport)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSerialNum)
                            .addComponent(txtSerialNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearchBySerial)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBrandV, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBrandV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchByBrand))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblYearV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtYearV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchByYear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSeatsV, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSeatsV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearchBySeats)
                            .addComponent(lblMinseats)
                            .addComponent(txtMinseats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblModelV, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtModelV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearchByModel)
                            .addComponent(lblMaxseats)
                            .addComponent(txtMaxseats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnSearchMinMax)
                        .addGap(33, 33, 33)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCityV)
                    .addComponent(txtCityV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchByCity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUsedV)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnIsUsed)
                        .addComponent(cbIUsedV)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaintenanceV)
                            .addComponent(cbMaintenanceV))
                        .addGap(11, 11, 11)
                        .addComponent(lblCarAvailabilityV, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnMaintenance)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAvailable)
                            .addComponent(btnFirstAvailable)
                            .addComponent(cbAvailableV))))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDelete, btnView});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnSearchByBrand, btnSearchByCity, btnSearchByModel, btnSearchBySeats, btnSearchByYear});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblTime, txtSerialNum});

    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblView.getSelectedRow();
        
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblView.getModel();
        Car selectedCar = (Car) model.getValueAt(selectedRowIndex, 0);
        list.deleteCar(selectedCar);
        JOptionPane.showMessageDialog(this, "Cars deleted");
        populateTable();
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        
         int selectedRowIndex = tblView.getSelectedRow();
        
        DefaultTableModel model = (DefaultTableModel) tblView.getModel();
        Car selectedCar = (Car) model.getValueAt(selectedRowIndex, 0);
        
        
        txtBrandV.setText(selectedCar.getBrand());
        txtYearV.setText(String.valueOf(selectedCar.getYear()));
        txtSeatsV.setText(String.valueOf(selectedCar.getSeats()));
        txtModelV.setText(selectedCar.getModelNum());
        txtSerialNum.setText(String.valueOf(selectedCar.getSerialNum()));
        txtCityV.setText(selectedCar.getCity());
        cbIUsedV.setSelected(selectedCar.getUsedByUber());
        cbMaintenanceV.setSelected(selectedCar.getMaintenanceCert());
        cbAvailableV.setSelected(selectedCar.getCarAvailable());
        
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        list.deleteEntry(Integer.parseInt(txtSerialNum.getText()));
        String brand = txtBrandV.getText();
        int year = Integer.parseInt(txtYearV.getText());
        int seats = Integer.parseInt(txtSeatsV.getText());
        String modelNum = txtModelV.getText();
        String city = txtCityV.getText();
        Boolean usedByUber = cbIUsedV.isSelected();
        Boolean maintenanceCert = cbMaintenanceV.isSelected();
        Boolean carAvailable = cbAvailableV.isSelected();
        
        
        Car c = list.addNewCar();
        c.setBrand(brand);
        c.setYear(year);
        c.setSeats(seats);
        c.setModelNum(modelNum);
        c.setCity(city);
        c.setUsedByUber(usedByUber);
        c.setMaintenanceCert(maintenanceCert);
        c.setCarAvailable(carAvailable);
        
        JOptionPane.showMessageDialog(this, "New Car added.");
        
        txtBrandV.setText("");
        txtYearV.setText("");
        txtSeatsV.setText("");
        txtModelV.setText("");
        cbIUsedV.isSelected();
        cbMaintenanceV.isSelected();
        cbAvailableV.isSelected();
        
        populateTable();
        
        String date=java.util.Calendar.getInstance().getTime().toString();
        lblTime.setText(date);
            
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSearchByBrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchByBrandActionPerformed
        // TODO add your handling code here:
        
        String brand = txtBrandV.getText();
        ArrayList<Car> list1 = list.searchByBrand(brand);
        populateTable(list1);
        
    }//GEN-LAST:event_btnSearchByBrandActionPerformed

    private void btnSearchByYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchByYearActionPerformed
        // TODO add your handling code here:
        
        int year = Integer.parseInt(txtYearV.getText());
        ArrayList<Car> list2 = list.searchByYear(year);
        populateTable(list2);
        
    }//GEN-LAST:event_btnSearchByYearActionPerformed

    private void btnSearchBySeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchBySeatsActionPerformed
        // TODO add your handling code here:
        
        int seats = Integer.parseInt(txtSeatsV.getText());
        ArrayList<Car> list3 = list.searchBySeats(seats);
        populateTable(list3);
        
    }//GEN-LAST:event_btnSearchBySeatsActionPerformed

    private void btnSearchByModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchByModelActionPerformed
        // TODO add your handling code here:
        
        String modelNum = txtBrandV.getText();
        ArrayList<Car> list4 = list.searchByModel(modelNum);
        populateTable(list4);
    }//GEN-LAST:event_btnSearchByModelActionPerformed

    private void btnSearchByCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchByCityActionPerformed
        // TODO add your handling code here:
        String city = txtCityV.getText();
        ArrayList<Car> list5 = list.searchByCity(city);
        populateTable(list5);
    }//GEN-LAST:event_btnSearchByCityActionPerformed

    private void btnAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvailableActionPerformed
        // TODO add your handling code here:
        boolean carAvailable = cbAvailableV.isSelected();
        ArrayList<Car> list6 = list.searchByAvailability(carAvailable);
        populateTable(list6);
    }//GEN-LAST:event_btnAvailableActionPerformed

    private void btnMaintenanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMaintenanceActionPerformed
        // TODO add your handling code here:
        boolean maintenanceCert = cbMaintenanceV.isSelected();
        ArrayList<Car> list7 = list.searchByMaintenence(maintenanceCert);
        populateTable(list7);
    }//GEN-LAST:event_btnMaintenanceActionPerformed

    private void btnIsUsedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIsUsedActionPerformed
        // TODO add your handling code here:
        boolean usedByUber = cbIUsedV.isSelected();
        ArrayList<Car> list8 = list.searchByUsability(usedByUber);
        populateTable(list8);
    }//GEN-LAST:event_btnIsUsedActionPerformed

    private void btnSearchBySerialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchBySerialActionPerformed
        // TODO add your handling code here:
        int serialNum = Integer.parseInt(txtSerialNum.getText());
        ArrayList<Car> list9 = list.searchBySerial(serialNum);
        populateTable(list9);
    }//GEN-LAST:event_btnSearchBySerialActionPerformed

    private void btnFirstAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstAvailableActionPerformed
        // TODO add your handling code here:
        ArrayList<Car> list10 = list.searchFirstAvailableCar(Boolean.TRUE);
        populateTable(list10);
    }//GEN-LAST:event_btnFirstAvailableActionPerformed

    private void btnSearchMinMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchMinMaxActionPerformed
        // TODO add your handling code here:
        int min = Integer.parseInt(txtMinseats.getText());
        int max = Integer.parseInt(txtMaxseats.getText());
        ArrayList<Car> list11 = list.findCarsMinMaxSeats(max, min, max);
        populateTable(list11);
        
    }//GEN-LAST:event_btnSearchMinMaxActionPerformed

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        final File f = chooser.getSelectedFile();
        String filepath = f.getAbsolutePath();

        File file = new File(filepath);
        try {
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);

            DefaultTableModel model = (DefaultTableModel) tblView.getModel();
            Object[] lines = br.lines().toArray();

            for (int m = 0; m < lines.length; m++) {
                String[] row = lines[m].toString().split(" ");
                Car c = list.addNewCar();

                c.setBrand(row[0]);
                c.setYear(Integer.parseInt(row[1]));
                c.setSeats(Integer.parseInt(row[2]));
                c.setModelNum(row[3]);
                c.setSerialNum(Integer.parseInt(row[4]));
                c.setCity(row[5]);
                c.setUsedByUber(Boolean.parseBoolean(row[6]));
                c.setMaintenanceCert(Boolean.parseBoolean(row[7]));
                c.setCarAvailable(Boolean.parseBoolean(row[8]));

                populateTable();
            }

        } catch (FileNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewJPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnImportActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvailable;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFirstAvailable;
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnIsUsed;
    private javax.swing.JButton btnMaintenance;
    private javax.swing.JButton btnSearchByBrand;
    private javax.swing.JButton btnSearchByCity;
    private javax.swing.JButton btnSearchByModel;
    private javax.swing.JButton btnSearchBySeats;
    private javax.swing.JButton btnSearchBySerial;
    private javax.swing.JButton btnSearchByYear;
    private javax.swing.JButton btnSearchMinMax;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JCheckBox cbAvailableV;
    private javax.swing.JCheckBox cbIUsedV;
    private javax.swing.JCheckBox cbMaintenanceV;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBrandV;
    private javax.swing.JLabel lblCarAvailabilityV;
    private javax.swing.JLabel lblCityV;
    private javax.swing.JLabel lblMaintenanceV;
    private javax.swing.JLabel lblMaxseats;
    private javax.swing.JLabel lblMinseats;
    private javax.swing.JLabel lblModelV;
    private javax.swing.JLabel lblSeats;
    private javax.swing.JLabel lblSeatsV;
    private javax.swing.JLabel lblSerialNum;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUsedV;
    private javax.swing.JLabel lblYearV;
    private javax.swing.JTable tblView;
    private javax.swing.JTextField txtBrandV;
    private javax.swing.JTextField txtCityV;
    private javax.swing.JTextField txtMaxseats;
    private javax.swing.JTextField txtMinseats;
    private javax.swing.JTextField txtModelV;
    private javax.swing.JTextField txtSeatsV;
    private javax.swing.JTextField txtSerialNum;
    private javax.swing.JTextField txtYearV;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {

        DefaultTableModel model = (DefaultTableModel) tblView.getModel();
        model.setRowCount(0);
        
        for (Car c : list.getList()){
            
            Object[] row = new Object[9];
            row[0]= c;
            row[1]= c.getYear();
            row[2]= c.getSeats();
            row[3]= c.getModelNum();
            row[4]= c.getSerialNum();
            row[5]= c.getCity();
            row[6]= c.getUsedByUber();
            row[7]= c.getMaintenanceCert();
            row[8]= c.getCarAvailable();
            
            model.addRow(row);
            
        }
    }
        private void populateTable(ArrayList<Car> c1) {

        DefaultTableModel model = (DefaultTableModel) tblView.getModel();
        model.setRowCount(0);
        
        for (Car c : c1){
            
            Object[] row = new Object[9];
            row[0]= c;
            row[1]= c.getYear();
            row[2]= c.getSeats();
            row[3]= c.getModelNum();
            row[4]= c.getSerialNum();
            row[5]= c.getCity();
            row[6]= c.getUsedByUber();
            row[7]= c.getMaintenanceCert();
            row[8]= c.getCarAvailable();
            
            model.addRow(row);
            
        }
        
    }
}
